apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "org.jetbrains.dokka"

tasks.register("androidSourcesJar", Jar) {
    archiveClassifier.set("sources")
    from(android.sourceSets.main.java.srcDirs)
}

tasks.register("androidJavadocJar", Jar) {
    archiveClassifier.set("javadoc")
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc.outputDirectory)
}

android {
    publishing {
        singleVariant("affiseRelease") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            affiseRelease(MavenPublication) {
                from components.release

                groupId = "com.affise"
                version = asSnapshot(affiseVersion, snapshot)

                artifact androidJavadocJar

                pom {
                    signing {
                        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
                        sign publishing.publications
                    }

                    name = artifactId
                    description = "affise"
                    url = "https://affise.com/"

                    licenses {
                        license {
                            name = "MIT license"
                            url = "https://github.com/affise/affise-mmp-sdk-android/blob/main/LICENSE"
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com:affise/affise-mmp-sdk-android.git"
                        developerConnection = "scm:git:ssh://github.com:affise/affise-mmp-sdk-android.git"
                        url = "https://github.com/affise/affise-mmp-sdk-android"
                    }
                    developers {
                        developer {
                            name = "Sergey Korney"
                            email = "s.korney@affise.com"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

static def asSnapshot(String version, boolean value) {
    var result = version
    if (value && !result.endsWith("SNAPSHOT")) {
        result += "-SNAPSHOT"
    }
    return result
}