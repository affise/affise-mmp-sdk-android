import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 4
        versionName "1.4.3 build (${buildTime()})"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        all {
            buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
    }
}

dependencies {
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //Installreferrer
    implementation "com.android.installreferrer:installreferrer:2.2"

    //Oaid sdk
    compileOnly files('libs/oaid_sdk_1.0.26.aar')

    //Tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "io.mockk:mockk:1.12.0"
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.json:json:20210307'
}

tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

static def buildTime() {
    def df = new SimpleDateFormat("dd-MM-yyyy HH:mm")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}