name: 🏗️ Publish
run-name: Publish ${{ github.ref_name }}

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Publish Affise Libraries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Gradle and wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Permission for Gradlew to Execute
        run: chmod +x gradlew

      # Build
      - name: Build AAR 📦
        run: |
          ./gradlew :attribution:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-advertising:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-androidid:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-appsflyer:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-link:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-meta:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-network:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-phone:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-status:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-subscription:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-rustore:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-huawei:assembleRelease --no-daemon --no-parallel
          ./gradlew :module-tiktok:assembleRelease --no-daemon --no-parallel
          ./gradlew :internal:assembleRelease --no-daemon --no-parallel

      # Publish
      - name: Publish Attribution
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :attribution:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel

      - name: Publish Module Advertising
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-advertising:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Androidid
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-androidid:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module AppsFlyer
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-appsflyer:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Link
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-link:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Meta
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-meta:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Network
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-network:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Phone
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-phone:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Status
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-status:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module Subscription
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-subscription:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel
  
      - name: Publish Module RuStore
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-rustore:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel

      - name: Publish Module Huawei
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-huawei:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel

      - name: Publish Module TikTok
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :module-tiktok:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel

      - name: Publish Internal
        if: ${{ !cancelled() }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SNAPSHOT: ${{ secrets.SNAPSHOT }}
        run: ./gradlew :internal:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon --no-parallel

      - name: Version Tag
        id: version_tag
        run: |
          echo Version: ${GITHUB_REF_NAME#v}
          echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      # Release
      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Affise Attribution Android SDK ${{ github.ref }}
          draft: false
          prerelease: false

      # Release Upload Attribution library
      - name: Upload Release Attribution AAR 📦
        if: ${{ !cancelled() }}
        id: upload-attribution-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: attribution/build/outputs/aar/attribution-release.aar
          asset_name: attribution-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Advertising
      - name: Upload Release Module Advertising AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-advertising-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-advertising/build/outputs/aar/module-advertising-release.aar
          asset_name: module-advertising-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module AndroidId
      - name: Upload Release Module AndroidId AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-androidid-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-androidid/build/outputs/aar/module-androidid-release.aar
          asset_name: module-androidid-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Link
      - name: Upload Release Module Link AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-link-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-link/build/outputs/aar/module-link-release.aar
          asset_name: module-link-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Network
      - name: Upload Release Module Network AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-network-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-network/build/outputs/aar/module-network-release.aar
          asset_name: module-network-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Phone
      - name: Upload Release Module Phone AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-phone-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-phone/build/outputs/aar/module-phone-release.aar
          asset_name: module-phone-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Status
      - name: Upload Release Module Status AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-status-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-status/build/outputs/aar/module-status-release.aar
          asset_name: module-status-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Subscription
      - name: Upload Release Module Subscription AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-subscription-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-subscription/build/outputs/aar/module-subscription-release.aar
          asset_name: module-subscription-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module RuStore
      - name: Upload Release Module RuStore AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-rustore-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-rustore/build/outputs/aar/module-rustore-release.aar
          asset_name: module-rustore-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Huawei
      - name: Upload Release Module Huawei AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-huawei-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-huawei/build/outputs/aar/module-huawei-release.aar
          asset_name: module-huawei-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module Meta
      - name: Upload Release Module Meta AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-meta-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-meta/build/outputs/aar/module-meta-release.aar
          asset_name: module-meta-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module AppsFlyer
      - name: Upload Release Module AppsFlyer AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-appsflyer-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-appsflyer/build/outputs/aar/module-appsflyer-release.aar
          asset_name: module-appsflyer-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

      # Release Upload Module TikTok
      - name: Upload Release Module TikTok AAR 📦
        if: ${{ !cancelled() }}
        id: upload-module-tiktok-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module-tiktok/build/outputs/aar/module-tiktok-release.aar
          asset_name: module-tiktok-${{ steps.version_tag.outputs.VERSION }}.aar
          asset_content_type: application/aar

#      # Release Upload Internal library
#      - name: Upload Release Internal AAR 📦
#        if: ${{ !cancelled() }}
#        id: upload-internal-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: internal/build/outputs/aar/internal-release.aar
#          asset_name: internal-${{ steps.version_tag.outputs.VERSION }}.aar
#          asset_content_type: application/aar

      # Demo App
      - name: Build Demo App
        if: ${{ !cancelled() }}
        run: ./gradlew :app:assembleDebug --no-daemon --no-parallel

      # Release Upload Demo App
      - name: Upload Demo App 📦
        if: ${{ !cancelled() }}
        id: upload-demo-app-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: Affise-Demo-${{ steps.version_tag.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive
