plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version "$dokkaVersion"
}

android {
    namespace 'com.affise.attribution.module.advertising'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    //Affise library
    api(project("::attribution"))

    //Oaid sdk
    compileOnly files('libs/oaid_sdk_1.0.26.aar')

    //Gaid
    compileOnly 'com.google.android.gms:play-services-ads:21.4.0'

    testImplementation "com.google.truth:truth:$testTruth"
    testImplementation "io.mockk:mockk:$testMockk"
    testImplementation "junit:junit:$testJunit"
    androidTestImplementation "androidx.test.ext:junit:$testAndroidxJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspressoCore"
}


def localPropsFile = project.rootProject.file('local.properties')
if (localPropsFile.exists()) {
    Properties prop = new Properties()
    new FileInputStream(localPropsFile).withCloseable { is ->
        prop.load(is)
    }
    prop.each { name, value ->
        ext[name] = value
    }
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.affise'
                artifactId = 'module-advertising'
                version = "$affiseVersion"

                artifact androidJavadocsJar
                artifact androidSourcesJar

                pom {
                    name = 'module-advertising'
                    description = 'Affise Attribution Library Advertising Module'
                    url = 'https://affise.com/'

                    licenses {
                        license {
                            name = 'MIT license'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com:affise/sdk-android.git'
                        developerConnection = 'scm:git:ssh://github.com:affise/sdk-android.git'
                        url = 'https://github.com/affise/sdk-android'
                    }
                    developers {
                        developer {
                            name = 'Sergey Korney'
                            email = 's.korney@affise.com'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                if (project.hasProperty("mvnSnapshot") && mvnSnapshot.toBoolean()) {
                    url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                } else {
                    url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                }

                if (project.hasProperty("sonatypeUsername") && project.hasProperty("sonatypePassword")) {
                    credentials{
                        username sonatypeUsername
                        password sonatypePassword
                    }
                }
            }
        }
    }
}

signing {
    if (project.hasProperty("signingKeyId") && project.hasProperty("signingKey") && project.hasProperty("signingPassword")) {
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign publishing.publications
    }
}
