// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.6.0"
    ext.dokkaVersion = "1.7.20"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.15'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def EnvValue(env, defaultValue) {
    return System.getenv(env) != null ? System.getenv(env) : defaultValue
}

ext {
    affiseVersion = "1.6.23"

    testJunit = "4.13.2"
    testAndroidxJunit = "1.1.5"
    testEspressoCore = "3.5.1"
    testMockk = "1.12.0"
    testTruth = "1.1.3"
    testJson = "20210307"

    nexusServiceUrl = "https://s01.oss.sonatype.org/service/local/"
    releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
    snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

    ossrhUsername = EnvValue('OSSRH_USERNAME', '')
    ossrhPassword = EnvValue('OSSRH_PASSWORD', '')
    signingKey = EnvValue('SIGNING_KEY', '')
    signingPassword = EnvValue('SIGNING_PASSWORD', '')
    signingKeyId = EnvValue('SIGNING_KEY_ID', '')
    mvnSnapshot = EnvValue('SNAPSHOT', false)
}

def localPropsFile = project.rootProject.file('local.properties')
if (localPropsFile.exists()) {
    Properties prop = new Properties()
    prop.load(new FileInputStream(localPropsFile))
    prop.each { name, value ->
        ext[name] = value
    }
}

group = "com.affise"
version = "$affiseVersion"
if (mvnSnapshot.toBoolean()) {
    version = "$affiseVersion-SNAPSHOT"
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("$nexusServiceUrl"))
            snapshotRepositoryUrl.set(uri("$snapshotsRepoUrl"))

            username = ossrhUsername
            password = ossrhPassword
        }
    }
}